// Code generated by "accessor -type=A -setter ./accessor/testdata/types.go"; DO NOT EDIT.

package types

import "time"

// Sb return sb value
func (t A) Sb() string {
	return t.sb
}

// SetSb set v to sb
func (t *A) SetSb(v string) {
	t.sb = v
}

// I return i value
func (t A) I() int {
	return t.i
}

// SetI set v to i
func (t *A) SetI(v int) {
	t.i = v
}

// B return b value
func (t A) B() B {
	return t.b
}

// SetB set v to b
func (t *A) SetB(v B) {
	t.b = v
}

// Bp return bp value
func (t A) Bp() *B {
	return t.bp
}

// SetBp set v to bp
func (t *A) SetBp(v *B) {
	t.bp = v
}

// T return t value
func (t A) T() time.Time {
	return t.t
}

// SetT set v to t
func (t *A) SetT(v time.Time) {
	t.t = v
}

// Tp return tp value
func (t A) Tp() *time.Time {
	return t.tp
}

// SetTp set v to tp
func (t *A) SetTp(v *time.Time) {
	t.tp = v
}

// Isl return isl value
func (t A) Isl() []int {
	return t.isl
}

// SetIsl set v to isl
func (t *A) SetIsl(v []int) {
	t.isl = v
}

// Islsl return islsl value
func (t A) Islsl() [][]int {
	return t.islsl
}

// SetIslsl set v to islsl
func (t *A) SetIslsl(v [][]int) {
	t.islsl = v
}

// Ia return ia value
func (t A) Ia() [2]int {
	return t.ia
}

// SetIa set v to ia
func (t *A) SetIa(v [2]int) {
	t.ia = v
}

// Iaa return iaa value
func (t A) Iaa() [2][2]int {
	return t.iaa
}

// SetIaa set v to iaa
func (t *A) SetIaa(v [2][2]int) {
	t.iaa = v
}

// M return m value
func (t A) M() map[int]string {
	return t.m
}

// SetM set v to m
func (t *A) SetM(v map[int]string) {
	t.m = v
}

// Mm return mm value
func (t A) Mm() map[int]map[int]string {
	return t.mm
}

// SetMm set v to mm
func (t *A) SetMm(v map[int]map[int]string) {
	t.mm = v
}

// Fnii return fnii value
func (t A) Fnii() func(int) int {
	return t.fnii
}

// SetFnii set v to fnii
func (t *A) SetFnii(v func(int) int) {
	t.fnii = v
}
